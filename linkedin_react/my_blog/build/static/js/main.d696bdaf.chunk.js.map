{"version":3,"sources":["NavBar.js","pages/HomePage.js","pages/AboutPage.js","pages/article-content.js","components/ArticlesList.js","pages/ArticlesListPage.js","components/CommentsList.js","components/AddCommentForm.js","components/UpvotesSection.js","pages/NotFoundPage.js","pages/ArticlePage.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","href","to","HomePage","AboutPage","articles","name","title","content","ArticlesList","map","article","key","substring","ArticlesListPage","articleContent","CommentsList","comments","comment","username","text","AddCommentForm","articleName","setArticleInfo","useState","setUsername","commentText","setCommentText","addComment","a","fetch","method","body","JSON","stringify","headers","result","json","type","value","onChange","event","target","rows","cols","onClick","UpvotesSection","upvotes","upvoteArticle","id","NotFoundPage","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","otherArticles","filter","paragraph","App","path","component","exact","Component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d696bdaf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './Navbar.css';\r\n\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <header className=\"toolbar\">\r\n            <nav className=\"toolbar_navigation\" >\r\n                {/* <div>\r\n                    <DrawerToggleButton click={props.drawerClickHandler} />\r\n                </div> */}\r\n                <div className=\"toolbar_logo\" ><a href=\"/\">THE LOGO</a></div>\r\n                <div className=\"spacer\" ></div>\r\n                <div className=\"toolbar_navigation-items\" >\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/about\">About</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/articles-list\">Articles</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n\r\n\r\n// const toolbar = props => (\r\n    \r\n// );\r\n\r\n// export default toolbar;","import React from 'react';\r\n\r\n// Can use <React.Fragment></React.Fragment> in place <></>\r\n\r\nconst HomePage = () => (\r\n    <>\r\n        <h1>Hello, Welcome to my blog</h1>\r\n        <p>\r\n            Welcome to my blog! Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque cursus sodales rutrum. Curabitur aliquet nisi a sollicitudin imperdiet. Sed odio risus, mattis sed pellentesque eget, aliquet sit amet justo. In hac habitasse platea dictumst. Praesent a lobortis nisl. Integer tristique eu justo et vehicula. Nulla interdum, nisi quis ornare iaculis, orci mauris imperdiet nunc, eu laoreet eros nisi nec quam. Donec porttitor eros eget diam aliquam pellentesque. Nam ultricies faucibus risus non dapibus. Maecenas ultrices pellentesque rhoncus.\r\n        </p>\r\n        <p>\r\n            Suspendisse suscipit elit sit amet mollis dignissim. Morbi ex turpis, iaculis sed condimentum et, luctus vitae massa. Pellentesque tempor dui non ante lobortis venenatis. Praesent at pretium mi, eu rutrum leo. Fusce aliquam erat quis libero viverra, nec elementum lectus faucibus. Morbi non mauris in dolor tincidunt molestie quis ut tellus. Suspendisse aliquam, lectus ac tempus elementum, dui enim malesuada ex, at commodo nisl purus sed nisl. Praesent risus erat, rhoncus pharetra enim id, finibus tempus dui. Nunc lectus turpis, tincidunt imperdiet mattis eu, fermentum nec arcu. Vestibulum malesuada sapien vel rhoncus molestie.\r\n        </p>\r\n    </>\r\n);\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\n// Can use <React.Fragment></React.Fragment> in place <></>\r\n\r\nconst AboutPage = () => (\r\n    <>\r\n        <h1>About Me</h1>\r\n        <p>\r\n            Welcome to my blog! Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque cursus sodales rutrum. Curabitur aliquet nisi a sollicitudin imperdiet. Sed odio risus, mattis sed pellentesque eget, aliquet sit amet justo. In hac habitasse platea dictumst. Praesent a lobortis nisl. Integer tristique eu justo et vehicula. Nulla interdum, nisi quis ornare iaculis, orci mauris imperdiet nunc, eu laoreet eros nisi nec quam. Donec porttitor eros eget diam aliquam pellentesque. Nam ultricies faucibus risus non dapibus. Maecenas ultrices pellentesque rhoncus.\r\n        </p>\r\n        <p>\r\n            Suspendisse suscipit elit sit amet mollis dignissim. Morbi ex turpis, iaculis sed condimentum et, luctus vitae massa. Pellentesque tempor dui non ante lobortis venenatis. Praesent at pretium mi, eu rutrum leo. Fusce aliquam erat quis libero viverra, nec elementum lectus faucibus. Morbi non mauris in dolor tincidunt molestie quis ut tellus. Suspendisse aliquam, lectus ac tempus elementum, dui enim malesuada ex, at commodo nisl purus sed nisl. Praesent risus erat, rhoncus pharetra enim id, finibus tempus dui. Nunc lectus turpis, tincidunt imperdiet mattis eu, fermentum nec arcu. Vestibulum malesuada sapien vel rhoncus molestie.\r\n        </p>\r\n    </>\r\n);\r\n\r\nexport default AboutPage;\r\n","const articles = [\r\n    {\r\n        name:'react',\r\n        title:'The Fastest Way To Learn React',\r\n        content:[\r\n            `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras id mi at massa volutpat iaculis. Curabitur egestas mattis odio ut pulvinar. Aenean tristique suscipit lorem, ac rhoncus nulla imperdiet in. Integer consectetur, quam ac porttitor rutrum, ante mi varius mi, ut fringilla diam est ac lorem. Fusce hendrerit posuere ante, sit amet auctor sem dictum eget. Vivamus velit dui, dapibus sed tellus sit amet, cursus tincidunt nibh. Curabitur vel feugiat turpis. Integer condimentum orci ultrices, molestie urna a, viverra tortor. Nunc mattis tellus massa, vitae aliquam metus interdum at. Duis gravida suscipit libero, quis blandit odio finibus in.`,\r\n            `Morbi aliquam egestas velit in aliquet. Proin mollis dapibus venenatis. Sed eu sem maximus, viverra augue quis, rhoncus nibh. Maecenas aliquet, lacus in venenatis tempor, magna tellus efficitur orci, sit amet ultricies ipsum orci quis nulla. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque ante quam, pellentesque sed arcu et, vehicula posuere urna. Donec lacus erat, tincidunt in enim quis, luctus scelerisque ligula. Nullam dapibus orci non eros lobortis bibendum. Duis viverra nunc sed augue vehicula ornare nec ut sem.`\r\n        ]\r\n    },\r\n    {\r\n        name:'android',\r\n        title:'The Fastest Way To Learn Android',\r\n        content:[\r\n            `Phasellus rutrum nisi eget elit venenatis tempus vitae vehicula nisi. Etiam dictum sapien ante, sit amet laoreet est tempus vitae. Integer et velit maximus, efficitur massa ut, scelerisque diam. Etiam auctor libero maximus purus dapibus, vel sodales purus commodo. Integer blandit ex eu dolor ultricies convallis. Duis eget tristique dolor. Morbi ultricies elit ut nunc viverra pulvinar. Morbi hendrerit mattis turpis id tristique. Aenean in lacus finibus, dignissim mauris eget, tincidunt purus. Aliquam ligula mi, facilisis vitae nisl fringilla, hendrerit volutpat turpis. Proin bibendum orci non lacus malesuada, at tempus libero faucibus. Nunc dictum arcu non dui maximus aliquet. Curabitur sit amet massa orci. Nullam rutrum quis elit eu lobortis.`,\r\n            `Quisque eget turpis ac neque luctus placerat in quis ipsum. Duis sed leo nibh. Nullam malesuada quam vel nulla vestibulum pellentesque. Mauris consectetur convallis iaculis. Morbi nulla justo, gravida et libero nec, blandit congue nibh. Sed sit amet ligula pretium, viverra neque tristique, porttitor lectus. Ut a erat semper, facilisis velit et, varius eros. Nunc vehicula orci at mattis sodales. Phasellus id ante sapien. Suspendisse et volutpat libero, vulputate bibendum diam. Aenean ultrices ligula nibh, sed hendrerit orci suscipit quis. Maecenas sodales, leo eu elementum egestas, turpis libero fermentum libero, et volutpat lectus urna quis augue. Donec convallis in mauris et viverra.`\r\n        ]\r\n    },\r\n    {\r\n        name:'node',\r\n        title:'The Fastest Way To Learn Node',\r\n        content:[\r\n            `Vestibulum justo diam, placerat ut efficitur quis, tincidunt at dolor. Phasellus vehicula eget augue eget venenatis. Sed quis tempor magna, vel finibus nulla. Vestibulum tincidunt augue id rutrum mattis. Pellentesque accumsan tincidunt augue, condimentum malesuada risus elementum quis. Aliquam placerat eleifend mi, nec pharetra arcu eleifend eu. Quisque elementum diam neque, luctus pulvinar est gravida scelerisque. Donec aliquam semper neque non malesuada. Aenean felis urna, tristique eu tortor eu, ultrices convallis mauris. Integer dapibus, eros in facilisis sodales, arcu est efficitur elit, fringilla scelerisque sapien ipsum sollicitudin dui. Donec nec nunc mi. Donec tincidunt eu odio tempus mattis. Cras quis sollicitudin lacus. Etiam erat eros, vehicula ultricies dictum et, finibus ac leo. Phasellus rutrum nisi arcu, id malesuada orci egestas sed.`,\r\n            `Duis id convallis ex. Praesent iaculis non velit sit amet auctor. Donec tristique dui quis vestibulum viverra. Nulla porttitor eros nunc, eu pulvinar sapien ultrices sit amet. Aliquam eget ultrices elit. Curabitur lobortis mauris eu nulla pellentesque, vel rutrum risus scelerisque. Aliquam efficitur odio in fermentum eleifend. Duis venenatis pellentesque turpis, ac porttitor nibh posuere et. Vestibulum magna sapien, rhoncus sit amet volutpat et, vehicula vitae urna. Suspendisse mollis at velit a imperdiet. Morbi interdum ligula et mauris venenatis, nec porta enim sodales.`\r\n        ]\r\n    },\r\n];\r\n\r\nexport default articles;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import articleContent from '../pages/article-content';\r\n\r\nconst ArticlesList = ({ articles }) => (\r\n    <>\r\n    {articles.map((article,key) => (\r\n        <Link className=\"article-list-item\" key={key} to={`/article/${article.name}`} >\r\n            <h3>{article.title}</h3>\r\n            <p> {article.content[0].substring(0,150)}... </p>\r\n            <hr />\r\n        </Link> \r\n    ))}\r\n    </>\r\n);\r\n\r\nexport default ArticlesList;","import React from 'react';\r\nimport articleContent from './article-content';\r\nimport './PageStyle.css';\r\nimport ArticlesList from '../components/ArticlesList';\r\n\r\n// Can use <React.Fragment></React.Fragment> in place <></>\r\n\r\nconst ArticlesListPage = () => (\r\n    <>\r\n        <h1 className=\"arthead\" >Articles</h1>\r\n        <ArticlesList articles = {articleContent} />\r\n    </>\r\n);\r\n\r\nexport default ArticlesListPage;\r\n","import React from 'react';\r\n\r\nconst CommentsList = ({ comments }) => (\r\n    <>\r\n    <h3>Comments:</h3>\r\n    {comments.map((comment,key) => (\r\n        <div className=\"comment\" key={key}>\r\n            <h4>{comment.username}</h4>\r\n            <p>{comment.text}</p>\r\n        </div>\r\n    ))}\r\n    </>\r\n);\r\n\r\nexport default CommentsList;","import React,{useState} from 'react';\r\n\r\nconst AddCommentForm = ({ articleName,setArticleInfo }) => {\r\n    const [username,setUsername] = useState('');\r\n    const [commentText,setCommentText] = useState('');\r\n\r\n    const addComment = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/add-comment`,{\r\n            method:'post',\r\n            body:JSON.stringify({username,text:commentText}),\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n            }\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n        setUsername('');\r\n        setCommentText('');\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h3>Add a comment:</h3>\r\n            <label>Name:</label>\r\n            <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\r\n            <label>Comment:</label>\r\n            <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\r\n            <button onClick={() => addComment()} >Add Comment</button>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default AddCommentForm;","import React from 'react';\r\n\r\nconst UpvotesSection = ({articleName,upvotes,setArticleInfo}) => {\r\n\r\n    const upvoteArticle = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/upvote`,{\r\n            method:'post',\r\n        });\r\n        const body =  await result.json();\r\n        setArticleInfo(body);\r\n    }\r\n\r\n    return(\r\n        <div id='upvotes-section' >\r\n            <button onClick={()=>upvoteArticle()}>Add Upvote</button>\r\n            <p>This post has been upvoted {upvotes} times</p>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default UpvotesSection;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n    <h1>404: Page Not Found</h1>\r\n);\r\n\r\nexport default NotFoundPage;","import React,{useState,useEffect} from 'react';\r\nimport articleContent from './article-content';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport CommentsList from '../components/CommentsList';\r\nimport AddCommentForm from '../components/AddCommentForm';\r\nimport UpvotesSection from '../components/UpvotesSection';\r\nimport NotFoundPage from './NotFoundPage';\r\n\r\n// Can use <React.Fragment></React.Fragment> in place <></>\r\n\r\nconst ArticlePage = ({match}) => {\r\n\r\n    const name = match.params.name;\r\n    const article = articleContent.find(article => article.name===name);\r\n\r\n    const [articleInfo,setArticleInfo] = useState({upvotes:0,comments:[]});\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            const result = await fetch(`/api/articles/${name}`);\r\n            const body = await result.json();\r\n            setArticleInfo(body); \r\n        }\r\n        fetchData();\r\n        // setArticleInfo({upvotes:Math.ceil(Math.random()*10)});\r\n    },[name]);\r\n\r\n    if(!article) return <NotFoundPage />\r\n\r\n    const otherArticles = articleContent.filter(article => article.name !== name);\r\n\r\n    return(\r\n        <>\r\n            <h1>{article.title}</h1>\r\n            <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\r\n            {article.content.map((paragraph,key) =>(\r\n                <p key={key} >{paragraph}</p>\r\n            ))};\r\n            <CommentsList comments={articleInfo.comments} />\r\n            <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\r\n            <h3>Other Articles:</h3>\r\n            <ArticlesList articles={otherArticles} />\r\n        </>\r\n    );\r\n}\r\nexport default ArticlePage;\r\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport NavBar from './NavBar';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport ArticlePage from './pages/ArticlePage';\n// import Toolbar from './Toolbar';\n// import SideDrawer from './SideDrawer/SideDrawer';\n// import Backdrop from './BackDrop/Backdrop';\nimport './App.css';\nimport NotFoundPage from './pages/NotFoundPage';\n// import backDrop from './BackDrop/Backdrop';\n\nclass App extends Component {\n  // state={\n  //   sideDrawerOpen : false\n  // };\n\n  // drawerToggleClickHandler = () =>{\n  //   this.setState((prevState) => {\n  //     return {sideDrawerOpen:!prevState.sideDrawerOpen};\n  //   });\n  // }\n\n  // backdropClickHandler = () => {\n  //   this.setState({sideDrawerOpen:false});\n  // }\n\n\n  render(){\n    // let backdrop;\n\n    // if(this.state.sideDrawerOpen){\n    //   backdrop   = <Backdrop style={{width:'100%'}} click={this.backdropClickHandler} />;\n    // }\n\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n        {/* <Toolbar drawerClickHandler={this.drawerToggleClickHandler}/> */}\n        {/* <SideDrawer show={this.state.sideDrawerOpen} /> */}\n        {/* {backdrop} */}\n        <NavBar />\n          <div id=\"page-body\">\n            <Switch>\n              <Route path=\"/\" component={HomePage} exact/>\n              <Route path=\"/about\" component={AboutPage} />\n              <Route path=\"/articles-list\" component={ArticlesListPage} />\n              <Route path=\"/article/:name\" component={ArticlePage} />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}